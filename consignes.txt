Consignes pour toi l'IA :

Charge le fichier consignes.txt pour recharger les étapes et sous-étapes du projet et acquérir les consignes du projet.
Charge le fichier memory.ia pour recharger mes connaissances et expériences acquises pendant le projet.
Charge le fichier iut-podman pour recharger le script iut-podman que j'ai créé pour configurer le miroir de Podman.

J'aimerai disposé d'un répertoire de projet ~/projets/podman 
Tu commenceras par configurer le répertoire courant du shell de ma machine à ce répertoire

Le projet doit être un projet libre destiné à être placé sur github
 * Il contiendra donc les fichiers classiques d'un dépot de sources de logiciel
 * L'outil git doit être configuré dans ce répertoire
 * Il contiendra un script iut-podman qui avant de lancer podman effectuera le nécessaire pour :
 * fixer le http_proxy 
 * fixer l'adresse du miroir du repository des images
 * Fixer le répertoire des images

Étape 1 : Configuration du répertoire de travail
* Sous-étape 1.1 : Vérifier que le répertoire de travail est bien configuré pour être utilisé comme répertoire de projet.
* Sous-étape 1.2 : Créer un nouveau répertoire de travail si nécessaire.

Étape 2 : Création du dépôt Git
* Sous-étape 2.1 : Initialiser un nouveau dépôt Git dans le répertoire de travail.
* Sous-étape 2.2 : Configurer les paramètres de base du dépôt Git (nom, adresse e-mail, etc.).

Étape 3 : Configuration de l'environnement de développement
* Sous-étape 3.1 : Installer les outils nécessaires pour le développement (Podman, Docker, etc.).
* Sous-étape 3.2 : Configurer les variables d'environnement nécessaires pour le développement (http_proxy, etc.).

Étape 4 : Création du script iut-podman
* Sous-étape 4.1 : Créer un nouveau script shell pour lancer Podman avec les paramètres nécessaires.
* Sous-étape 4.2 : Configurer les paramètres du script pour fixer le http_proxy, l'adresse du miroir du repository des images et le répertoire des images.

Étape 5 : Test et validation
* Sous-étape 5.1 : Tester le script iut-podman pour vérifier qu'il fonctionne correctement.
* Sous-étape 5.2 : Valider les résultats du test pour s'assurer que le script fonctionne comme attendu.

Étape 6 : Déploiement et mise en production
* Sous-étape 6.1 : Déployer le script iut-podman dans un environnement de production.
* Sous-étape 6.2 : Configurer les paramètres de production pour le script iut-podman.

**Consignes sur les états**

* Les états doivent être sauvegardés régulièrement pour éviter de perdre des informations importantes.
* Les états doivent être mis à jour après chaque action ou tâche accomplie pour refléter l'état actuel du projet.
* Les états peuvent prendre les valeurs suivantes :
 + [not started] : l'étape n'a pas été commencée.
 + [in progress] : l'étape est en cours de réalisation.
 + [completed] : l'étape a été terminée avec succès.

**Consignes pour memory.ia**

* Le fichier memory.ia est utilisé pour stocker les connaissances et expériences acquises pendant le projet.
* Il doit contenir les informations importantes qui ont été acquises pendant le projet, telles que les états des étapes et les résultats des tests.
* Il ne doit pas contenir la description des étapes, qui est stockée dans le fichier consignes.txt.
* Il doit être mis à jour régulièrement pour refléter l'état actuel du projet.

**Consignes pour consignes.txt**

* Le fichier consignes.txt est utilisé pour stocker la description des étapes du projet.
* Il doit contenir les informations nécessaires pour comprendre les étapes du projet, telles que les objectifs, les tâches et les résultats attendus.
* Il doit être utilisé en conjonction avec le fichier memory.ia pour obtenir une vue complète du projet.
* Il doit être mis à jour régulièrement pour refléter les changements dans les étapes du projet.
